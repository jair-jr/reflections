==========================
Git notes
==========================

Commands:

git log
  Shows commits ids and their messages.

git clone <url>
  Copies a repository to local file system.

git diff
  git diff
    Compares the working directory to the staging area

  git diff <commit id #1> <commit id #2>
    Compares commit #1 to commit #2.

  git diff --staged
    Compares the staging area to the most recent commit in the repository.

git checkout
  git checkout <commit id>
    Changes the files in the working directory so that they are equal to those on <commit id>

  git checkout <branch>
    Changes the files in the working directory so that they are equal to those on the most recent commit in the <branch> branch.
    Ex.: git checkout master (checks out the most recent commit in the master branch)

git init
  Initializes a git repository in the current directory, creating the ".git" meta-data directory.

git status
  Show a summary of the repository summary containing: 1) files in the staging area; 2) files out of the staging area; 3) the current branch

git add <file>
  Adds a file to the staging area.

git reset HEAD <file>
  Removes a file from the staging area.

git commit -m "Message"
  Commits the files in the staging area to the repository.
  Note: "git commit" (whithout -m) opens the core.editor for the user to type the commit message.

git config --global <property> <value>
  Changes git configuration by setting a global property value
  Ex.: git config --global core.editor "nano"

git branch
  git branch
    Shows the branches in the repository.

  git branch <new-branch>
    Creates a new branch in the repository.
